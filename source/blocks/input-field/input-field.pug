mixin input-field({ inputType = 'text', labelText } = {})
  -
    const blockName = 'input-field';
    const blockAttributes = {
      class: [`${blockName}__field`],
    };
    const wrapperClass = [blockName];
    const iconClass = ['material-icons', `${blockName}__icon`, `js-${blockName}__icon`];

  case inputType
    when 'email'
      -
        blockAttributes.type = inputType;
        blockAttributes.name = attributes.name || 'email';
        blockAttributes.placeholder = attributes.placeholder || 'Email';
    when 'password'
      -
        blockAttributes.type = inputType;
        blockAttributes.name = attributes.name || 'password';
        blockAttributes.placeholder = attributes.placeholder || 'Пароль';
    when 'mask-date'
      -
        wrapperClass.push(`js-${blockName}`);
        blockAttributes.class.push(`js-${blockName}__field`);
        blockAttributes.type = 'text';
        blockAttributes.placeholder = attributes.placeholder || 'ДД.ММ.ГГГГ';
        blockAttributes['data-inputmask'] = "'alias': 'datetime'";
        blockAttributes['data-inputmask-inputFormat'] = 'dd.mm.yyyy';
        blockAttributes['data-inputmask-placeholder'] = 'ДД.ММ.ГГГГ';
    when 'dropdown'
      -
        wrapperClass.push(`js-${blockName}`);
        blockAttributes.class.push(`js-${blockName}__field`);
        blockAttributes.class.push(`${blockName}__field_style_dropdown`);
        blockAttributes.type = 'text';
    default
      - blockAttributes.type = 'text';

  div(class=wrapperClass)
    if (labelText)
      label(class=`${blockName}__label`) #{labelText}
    input&attributes(Object.assign({}, attributes, blockAttributes))
    if (inputType === 'dropdown')
      i(class=iconClass) expand_more
